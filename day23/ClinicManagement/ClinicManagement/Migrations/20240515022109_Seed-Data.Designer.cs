// <auto-generated />
using ClinicManagement.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicManagement.Migrations
{
    [DbContext(typeof(ClinicManagementContext))]
    [Migration("20240515022109_Seed-Data")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClinicManagement.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Experience = 10,
                            Name = "Dr. Smith"
                        },
                        new
                        {
                            Id = 2,
                            Experience = 8,
                            Name = "Dr. Johnson"
                        },
                        new
                        {
                            Id = 3,
                            Experience = 15,
                            Name = "Dr. Lee"
                        },
                        new
                        {
                            Id = 4,
                            Experience = 12,
                            Name = "Dr. Patel"
                        },
                        new
                        {
                            Id = 5,
                            Experience = 7,
                            Name = "Dr. Garcia"
                        },
                        new
                        {
                            Id = 6,
                            Experience = 20,
                            Name = "Dr. Tanaka"
                        },
                        new
                        {
                            Id = 7,
                            Experience = 18,
                            Name = "Dr. Müller"
                        },
                        new
                        {
                            Id = 8,
                            Experience = 5,
                            Name = "Dr. Dupont"
                        },
                        new
                        {
                            Id = 9,
                            Experience = 14,
                            Name = "Dr. Rossi"
                        },
                        new
                        {
                            Id = 10,
                            Experience = 11,
                            Name = "Dr. Sato"
                        });
                });

            modelBuilder.Entity("ClinicManagement.Models.DoctorSpeciality", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId", "SpecialityId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("DoctorSpecialities");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            SpecialityId = 1
                        },
                        new
                        {
                            DoctorId = 2,
                            SpecialityId = 2
                        },
                        new
                        {
                            DoctorId = 3,
                            SpecialityId = 3
                        },
                        new
                        {
                            DoctorId = 4,
                            SpecialityId = 4
                        },
                        new
                        {
                            DoctorId = 5,
                            SpecialityId = 5
                        },
                        new
                        {
                            DoctorId = 6,
                            SpecialityId = 6
                        },
                        new
                        {
                            DoctorId = 7,
                            SpecialityId = 7
                        },
                        new
                        {
                            DoctorId = 8,
                            SpecialityId = 8
                        },
                        new
                        {
                            DoctorId = 9,
                            SpecialityId = 9
                        },
                        new
                        {
                            DoctorId = 10,
                            SpecialityId = 10
                        });
                });

            modelBuilder.Entity("ClinicManagement.Models.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dermatology"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Orthopedics"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Oncology"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Neurology"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Gynecology"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Psychiatry"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Ophthalmology"
                        });
                });

            modelBuilder.Entity("ClinicManagement.Models.DoctorSpeciality", b =>
                {
                    b.HasOne("ClinicManagement.Models.Doctor", "Doctor")
                        .WithMany("DoctorSpecialities")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicManagement.Models.Speciality", "Speciality")
                        .WithMany("DoctorSpecialities")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("ClinicManagement.Models.Doctor", b =>
                {
                    b.Navigation("DoctorSpecialities");
                });

            modelBuilder.Entity("ClinicManagement.Models.Speciality", b =>
                {
                    b.Navigation("DoctorSpecialities");
                });
#pragma warning restore 612, 618
        }
    }
}
